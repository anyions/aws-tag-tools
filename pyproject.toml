[tool.poetry]
name = "aws-tag-tools"
version = "0.1.1"
description = "A bulk management tool for the tags of AWS resources"
authors = ["AnyIons <anyions@hotmail.com>"]
maintainers = ["AnyIons <anyions@hotmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/anyions/aws-tag-tools"
homepage = "https://github.com/anyions/aws-tag-tools"
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Utilities",
]
include = ["LICENSE"]
packages = [{ include = "awstt" }]

[tool.poetry.dependencies]
python = "~3.11"
boto3 = "^1.34.104"
loguru = { version = "^0.7.2", optional = true }

[tool.poetry.extras]
cli = ["loguru"]

[tool.poetry.scripts]
awstt = 'awstt.cli:run'

[tool.poetry.group.dev.dependencies]
isort = "^5.13.2"
black = "^24.4.2"
pre-commit = "^3.7.1"

[tool.black]
line-length = 120
target-version = ['py311']

[tool.isort]
profile = "black"
extend_skip = [".md", ".json", ".toml"]
known_first_party = ["common"]
line_length = 120
lines_after_imports = 2
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
split_on_trailing_comma = true
skip_glob = "tests"

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "pep440"
version_provider = "poetry"
update_changelog_on_bump = true
major_version_zero = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
